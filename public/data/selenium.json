{
    "subElements": [
      "driver.get()", "driver.find_element()", "driver.find_elements()",
      "driver.close()", "driver.quit()", "driver.refresh()",
      "driver.back()", "driver.forward()", "driver.execute_script()",
      "element.click()", "element.send_keys()", "element.clear()",
      "element.get_attribute()", "element.is_displayed()",
      "element.is_enabled()", "element.is_selected()", 
      "driver.switch_to.frame()", "driver.switch_to.default_content()",
      "driver.switch_to.window()", "driver.switch_to.alert()",
      "alert.accept()", "alert.dismiss()", "driver.implicitly_wait()",
      "driver.explicitly_wait()", "driver.get_screenshot_as_file()"
    ],
    "explanations": {
      "driver.get()": "Opens a webpage using the given URL (e.g., 'driver.get(\"https://example.com\")').",
      "driver.find_element()": "Finds an element using a specified locator strategy (e.g., 'driver.find_element(By.ID, \"element_id\")').",
      "driver.find_elements()": "Finds multiple elements using a specified locator strategy (e.g., 'driver.find_elements(By.CLASS_NAME, \"classname\")').",
      "driver.close()": "Closes the current browser window.",
      "driver.quit()": "Closes all browser windows and ends the WebDriver session.",
      "driver.refresh()": "Refreshes the current webpage.",
      "driver.back()": "Navigates back to the previous page in the browser history.",
      "driver.forward()": "Navigates forward to the next page in the browser history.",
      "driver.execute_script()": "Executes JavaScript within the current page (e.g., 'driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight)\")').",
      "element.click()": "Clicks on the specified element.",
      "element.send_keys()": "Simulates typing text into an input field (e.g., 'element.send_keys(\"hello\")').",
      "element.clear()": "Clears the text from an input field.",
      "element.get_attribute()": "Gets the value of an attribute of the specified element (e.g., 'element.get_attribute(\"href\")').",
      "element.is_displayed()": "Checks if an element is visible on the webpage.",
      "element.is_enabled()": "Checks if an element is enabled for interaction.",
      "element.is_selected()": "Checks if an element (e.g., checkbox, radio button) is selected.",
      "driver.switch_to.frame()": "Switches to an iframe using its name, index, or WebElement (e.g., 'driver.switch_to.frame(\"frame_name\")').",
      "driver.switch_to.default_content()": "Switches back to the default page content from an iframe.",
      "driver.switch_to.window()": "Switches to a different browser window or tab (e.g., 'driver.switch_to.window(handle)').",
      "driver.switch_to.alert()": "Switches to an alert popup.",
      "alert.accept()": "Accepts an alert popup (clicks 'OK').",
      "alert.dismiss()": "Dismisses an alert popup (clicks 'Cancel').",
      "driver.implicitly_wait()": "Sets a global wait time for finding elements (e.g., 'driver.implicitly_wait(10)').",
      "driver.explicitly_wait()": "Waits for a specific condition before proceeding (e.g., 'WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, \"element_id\")))').",
      "driver.get_screenshot_as_file()": "Captures a screenshot and saves it as a file (e.g., 'driver.get_screenshot_as_file(\"screenshot.png\")')."
    }
  }
  